// Code generated by MockGen. DO NOT EDIT.
// Source: image_file_repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	error "asynchronous-ocr-server/error"
	model "asynchronous-ocr-server/model"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockImageFileRepository is a mock of ImageFileRepository interface.
type MockImageFileRepository struct {
	ctrl     *gomock.Controller
	recorder *MockImageFileRepositoryMockRecorder
}

// MockImageFileRepositoryMockRecorder is the mock recorder for MockImageFileRepository.
type MockImageFileRepositoryMockRecorder struct {
	mock *MockImageFileRepository
}

// NewMockImageFileRepository creates a new mock instance.
func NewMockImageFileRepository(ctrl *gomock.Controller) *MockImageFileRepository {
	mock := &MockImageFileRepository{ctrl: ctrl}
	mock.recorder = &MockImageFileRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageFileRepository) EXPECT() *MockImageFileRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockImageFileRepository) Create(ctx context.Context, toBeCreated model.ImageFile) (model.ImageFile, error.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, toBeCreated)
	ret0, _ := ret[0].(model.ImageFile)
	ret1, _ := ret[1].(error.Error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockImageFileRepositoryMockRecorder) Create(ctx, toBeCreated interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockImageFileRepository)(nil).Create), ctx, toBeCreated)
}

// DeleteByID mocks base method.
func (m *MockImageFileRepository) DeleteByID(ctx context.Context, id int64) error.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteByID", ctx, id)
	ret0, _ := ret[0].(error.Error)
	return ret0
}

// DeleteByID indicates an expected call of DeleteByID.
func (mr *MockImageFileRepositoryMockRecorder) DeleteByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteByID", reflect.TypeOf((*MockImageFileRepository)(nil).DeleteByID), ctx, id)
}

// GetByID mocks base method.
func (m *MockImageFileRepository) GetByID(ctx context.Context, id int64) (model.ImageFile, error.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, id)
	ret0, _ := ret[0].(model.ImageFile)
	ret1, _ := ret[1].(error.Error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockImageFileRepositoryMockRecorder) GetByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockImageFileRepository)(nil).GetByID), ctx, id)
}
